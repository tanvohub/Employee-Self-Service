/*! ess - v - 2017-11-13 */
function destSelectionCtrl($scope, modals) {
    $scope.destination = {
        address: void 0,
        arrivalDate: void 0,
        departureDate: void 0
    }, $scope.addressCallback = function(address) {
        $scope.destination.address = address;
    }, $scope.allFieldsEntered = function() {
        return void 0 !== $scope.destination.address && void 0 !== $scope.destination.arrivalDate && void 0 !== $scope.destination.departureDate;
    }, $scope.submit = function() {
        $scope.destination.arrivalDate = moment($scope.destination.arrivalDate, "MM-DD-YYYY").format("YYYY-MM-DD"), 
        $scope.destination.departureDate = moment($scope.destination.departureDate, "MM-DD-YYYY").format("YYYY-MM-DD"), 
        modals.resolve($scope.destination);
    }, $scope.cancel = function() {
        modals.reject();
    };
}

function travelAppController($scope, appProps, modals, gsaApi, mileageAllowanceApi, travelApplicationApi) {
    const STATES = [ "LOCATION_SELECTION", "METHOD_AND_PURPOSE", "REVIEW_AND_SUBMIT" ];
    $scope.state = "", $scope.app = {
        applicantEmpId: void 0,
        allowances: {
            gsa: {
                meals: 0,
                lodging: 0,
                incidental: 0
            },
            mileage: 0,
            tolls: 0,
            parking: 0,
            alternate: 0,
            registrationFee: 0
        },
        itinerary: {
            origin: void 0,
            destinations: {
                items: []
            }
        },
        modeOfTransportation: void 0,
        purposeOfTravel: ""
    }, function() {
        $scope.state = STATES[0], $scope.app.applicantEmpId = appProps.user.employeeId;
    }(), $scope.setOrigin = function(address) {
        $scope.app.itinerary.origin = address;
    }, $scope.addDestinationOnClick = function() {
        modals.open("destination-selection-modal").then(function(destination) {
            $scope.app.itinerary.destinations.items.push(destination);
        });
    }, $scope.removeDestination = function(dest) {
        var index = $scope.app.itinerary.destinations.items.indexOf(dest);
        $scope.app.itinerary.destinations.items.splice(index, 1);
    }, $scope.locationsCompleted = function() {
        return $scope.app.itinerary.origin && $scope.app.itinerary.destinations.items.length > 0;
    }, $scope.toMethodAndPurpose = function() {
        $scope.state = STATES[1];
    }, $scope.MODES_OF_TRANSPORTATION = [ "Personal Auto", "Senate Vehicle", "Train", "Airplane", "Other" ], 
    $scope.methodAndPurposeCompleted = function() {
        return $scope.app.modeOfTransportation;
    }, $scope.toReviewAndSubmit = function() {
        $scope.state = STATES[2], $scope.initReviewAndSubmit();
    }, $scope.initReviewAndSubmit = function() {
        gsaApi.save($scope.app.itinerary, function(response) {
            $scope.app.allowances.gsa = response.result;
        }), mileageAllowanceApi.save($scope.app.itinerary, function(response) {
            $scope.app.allowances.mileage = response.result.mileage;
        });
    }, $scope.submitApplication = function() {
        travelApplicationApi.save($scope.app, function() {});
    };
}

function historyController($scope) {
    $scope.test = "Hello angular";
}

function travelDetailCtrl($scope, modals) {
    $scope.requestInfo = modals.params().info, $scope.exit = function() {
        modals.resolve();
    };
}

function historyController($scope, appProps, modals, travelApplicationApi) {
    function parseResponse(resp) {
        result = resp.result;
        for (var i = 0; i < result.length; i++) completeTravelHistory.push(result[i]);
    }
    var completeTravelHistory = [];
    $scope.date = {
        from: moment().subtract(1, "month").format("MM/DD/YYYY"),
        to: moment().format("MM/DD/YYYY")
    }, $scope.init = function() {
        function onSuccess(resp) {
            parseResponse(resp), $scope.updateDateRange();
        }
        function onFail(resp) {
            modals.open("500", {
                details: resp
            });
        }
        var params = {
            empId: 11168,
            status: "APPROVED"
        };
        return travelApplicationApi.get(params, onSuccess, onFail);
    }, $scope.updateDateRange = function() {
        $scope.date.from = angular.element("#dateFrom").val(), $scope.date.to = angular.element("#dateTo").val(), 
        $scope.travelHistory = [];
        for (var i = 0; i < completeTravelHistory.length; i++) Date.parse(completeTravelHistory[i].travelDate) >= Date.parse($scope.date.from) && Date.parse(completeTravelHistory[i].travelDate) <= Date.parse($scope.date.to) && $scope.travelHistory.push(completeTravelHistory[i]);
        $scope.travelHistory.sort(function(a, b) {
            return new Date(b.travelDate.date) - new Date(a.travelDate.date);
        });
    }, $scope.viewApplicationDetails = function(requestId) {
        for (request = {}, i = 0; i < $scope.travelHistory.length; i++) if (element = $scope.travelHistory[i], 
        element.id == requestId) {
            request = element;
            break;
        }
        modals.open("travel-history-detail-modal", {
            info: request
        }, !0).catch(function() {});
    }, $scope.init();
}

function userConfigCtrl($scope, appProps, ActiveEmployeeApi) {
    $scope.empId = appProps.user.employeeId, $scope.init = function() {
        $scope.granteeInfo = {
            selectedGrantee: null,
            granted: !1,
            startDate: null,
            endDate: null,
            permanent: !1
        }, $scope.grantees = [], ActiveEmployeeApi.get({
            activeOnly: !0
        }, function(resp) {
            resp.success && angular.forEach(resp.employees, function(employee) {
                var fullName = employee.fullName;
                $scope.grantees.push(fullName);
            });
        }).$promise.then(function(resp) {
            return ActiveEmployeeApi.get({
                activeOnly: !0
            }, function(resp) {}).$promise;
        }).then(function(resp) {
            return ActiveEmployeeApi.get({
                activeOnly: !0
            }, function(resp) {}).$promise;
        }).catch(function(resp) {
            modals.open("500", {
                details: resp
            });
        });
    }, $scope.saveGrants = function() {
        $scope.granteeInfo.selectedGrantee && ($scope.granteeInfo.permanent || $scope.granteeInfo.startDate && $scope.granteeInfo.endDate);
    }, $scope.setPermanent = function() {
        $scope.granteeInfo.permanent ? ($scope.granteeInfo.startDate = moment().format("MM/DD/YYYY"), 
        $scope.granteeInfo.endDate = moment().add({
            years: 1
        }).format("MM/DD/YYYY")) : ($scope.granteeInfo.startDate = null, $scope.granteeInfo.endDate = null);
    }, $scope.setStartDate = function() {
        $scope.granteeInfo.startDate = moment().format("MM/DD/YYYY");
    }, $scope.setEndDate = function() {
        $scope.granteeInfo.endDate = moment().format("MM/DD/YYYY");
    }, $scope.reset = function() {
        $scope.init();
    }, $scope.init();
}

function upcomingTravelController($scope, appProps, locationService, activeApplicationApi) {
    function initApplications(response) {
        $scope.applications = response.result;
    }
    $scope.applications = [], $scope.savedApplications = [], $scope.init = function() {
        var params = {
            empId: 11168,
            status: "APPROVED"
        };
        activeApplicationApi.get(params).$promise.then(initApplications);
    }, $scope.init();
}

var essTravel = angular.module("essTravel");

essTravel.directive("destinationSelectionModal", [ "appProps", function(appProps) {
    return {
        templateUrl: appProps.ctxPath + "/template/travel/application/destination-selection-modal",
        scope: {},
        controller: "DestinationSelectionModalCtrl"
    };
} ]).controller("DestinationSelectionModalCtrl", [ "$scope", "modals", destSelectionCtrl ]);

var essTravel = angular.module("essTravel");

essTravel.controller("NewTravelApplicationCtrl", [ "$scope", "appProps", "modals", "TravelGsaAllowanceApi", "TravelMileageAllowanceApi", "TravelApplicationApi", travelAppController ]);

var essTravel = angular.module("essTravel");

essTravel.controller("TravelManageHistoryController", [ "$scope", historyController ]);

var essTravel = angular.module("essTravel");

essTravel.directive("travelAutocomplete", [ "appProps", function(appProps) {
    return {
        restrict: "A",
        scope: {
            callback: "&"
        },
        link: function($scope, $elem, $attrs) {
            function parseAddress1(place) {
                return getTypeName(place, "street_number") + " " + getTypeName(place, "route");
            }
            function parseCity(place) {
                var city = getTypeName(place, "locality");
                return null === city ? getTypeName(place, "administrative_area_level_3") : city;
            }
            function parseState(place) {
                return getTypeName(place, "administrative_area_level_1");
            }
            function parseZip5(place) {
                return getTypeName(place, "postal_code");
            }
            function getTypeName(place, type) {
                for (var i = 0; i < place.address_components.length; i++) {
                    var component = place.address_components[i];
                    if (component.types[0] === type) return component.long_name;
                }
                return "";
            }
            var element = $elem[0], autocomplete = new google.maps.places.Autocomplete(element, {
                types: [ "geocode" ]
            });
            autocomplete.addListener("place_changed", function() {
                var address = {}, place = autocomplete.getPlace();
                address.addr1 = parseAddress1(place), address.city = parseCity(place), address.state = parseState(place), 
                address.zip5 = parseZip5(place), $scope.callback({
                    address: address
                });
            });
        }
    };
} ]);

var essTravel = angular.module("essTravel");

essTravel.directive("travelHistoryDetailModal", [ "appProps", function(appProps) {
    return {
        templateUrl: appProps.ctxPath + "/template/travel/travel-history-detail-modal",
        scope: {},
        controller: "TravelHistoryDetailCtrl"
    };
} ]).controller("TravelHistoryDetailCtrl", [ "$scope", "modals", travelDetailCtrl ]);

var essTravel = angular.module("essTravel");

essTravel.controller("TravelHistoryController", [ "$scope", "appProps", "modals", "TravelApplicationApi", "PaginationModel", historyController ]);

var essTravel = angular.module("essTravel");

essTravel.controller("UserConfigCtrl", [ "$scope", "appProps", "ActiveEmployeeApi", userConfigCtrl ]);

var essTravel = angular.module("essTravel");

essTravel.controller("UpcomingTravelController", [ "$scope", "appProps", "LocationService", "TravelActiveApplicationApi", upcomingTravelController ]);
//# sourceMappingURL=ess-travel.min.js.map